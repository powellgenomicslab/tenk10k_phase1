#!/bin/bash
#$ -S /bin/bash
#$ -cwd
#$ -V
#$ -r yes
#$ -l mem_requested=400G
#$ -l tmp_requested=40G
#$ -N prepare_pheno
#$ -q short.q
#$ -e /directflow/SCCGGroupShare/projects/blabow/tenk10k_phase1/data_processing/scanpy/logs/prepare_pheno.err
#$ -o /directflow/SCCGGroupShare/projects/blabow/tenk10k_phase1/data_processing/scanpy/logs/prepare_pheno.log
#$ -t 1-22
#$ -m ae
#$ -M b.bowen@garvan.org.au

# TODO:
# Use the raw scanpy object (pre-clustering, removal of low seq depth cluster)
# can then remove list of low seq-depth barcodes, make one per cell type 

PY_PATH="/share/ScratchGeneral/anncuo/jupyter/conda_notebooks/envs/cellregmap_notebook/bin/"
PYSCRIPT="/directflow/SCCGGroupShare/projects/blabow/tenk10k_phase1/Scanpy/prepare_pheno.py"
CELL_TYPES_FILE="/directflow/SCCGGroupShare/projects/blabow/tenk10k_phase1/data_processing/scanpy/output/integrated_objects/unique_cell_types_wg2_scpred.txt"
CHROMOSOME=${SGE_TASK_ID};

# Check if the cell types file exists
if [ -f "${CELL_TYPES_FILE}" ]; then
    # read each cell type name from the file
    while IFS= read -r line; do
        echo "Running for cell type: ${line}"
        CELLTYPE=${line} 
        # Do the main job for that cell type 
        echo "Command to run: ${PY_PATH}/python ${PYSCRIPT} ${CELLTYPE} ${CHROMOSOME}"
        ${PY_PATH}/python ${PYSCRIPT} ${CELLTYPE} ${CHROMOSOME}

    done < "${CELL_TYPES_FILE}"

else
    echo "File ${CELL_TYPES_FILE} does not exist."
fi

